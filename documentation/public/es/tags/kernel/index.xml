<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kernel on Portal de documentación de FreeBSD</title><link>http://172.16.201.134:1313/es/tags/kernel/</link><description>Recent content in Kernel on Portal de documentación de FreeBSD</description><generator>Hugo</generator><language>es</language><copyright>BSD 2-clause 'Simplified' License</copyright><atom:link href="http://172.16.201.134:1313/es/tags/kernel/index.xml" rel="self" type="application/rss+xml"/><item><title>Emulación Linux(R) en FreeBSD</title><link>http://172.16.201.134:1313/es/articles/linux-emulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://172.16.201.134:1313/es/articles/linux-emulation/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">
&lt;div class="paragraph abstract-title">
&lt;p>Resumen&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Esta tesis doctoral trata sobre cómo actualizar la capa de emulación de Linux® (también llamada &lt;em>Linuxulator&lt;/em>). La tarea consistía en actualizar dicha capa para alcanzar en funcionalidad a Linux® 2.6. Como implementación de referencia se escogió el kernel Linux® 2.6.16. El concepto se basa ligeramente en la implementación de NetBSD. La mayoría del trabajo se realizó en el verano de 2006 como parte del programa de estudiantes Google Summer of Code. El foco se situó en añadir soporte para &lt;em>NPTL&lt;/em> (la nueva librería de hilos POSIX®) a la capa de emulación, incluyento &lt;em>TLS&lt;/em> (almacenamiento local para hilos), &lt;em>futexes&lt;/em> (mutex rápidos en espacio de usuario), &lt;em>PID mangling&lt;/em> y otras cosas menores. En el proceso se identificaron y arreglaron muchos problemas menores. Mi trabajo se integró en el repositorio fuente principal de FreeBSD y estará disponible en la próxima versión 7.0R. Los miembros del equipo de desarrollo de emulación estamos trabajando para que la emulación de Linux® 2.6 sea la capa de emulación por defecto en FreeBSD.&lt;/p>
&lt;/div></description></item><item><title>Escribiendo una clase GEOM</title><link>http://172.16.201.134:1313/es/articles/geom-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://172.16.201.134:1313/es/articles/geom-class/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">
&lt;div class="paragraph abstract-title">
&lt;p>Resumen&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Este texto documenta algunos puntos de partida en el desarrollo de clases GEOM y módulos del kernel en general. Se asume que el lector está familiarizado con la programación en C en modo usuario.&lt;/p>
&lt;/div>
&lt;hr/>

&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="intro">1. Introducción&lt;a class="anchor" href="#intro">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="sect2">
&lt;h3 id="intro-docs">1.1. Documentación&lt;a class="anchor" href="#intro-docs">&lt;/a>&lt;/h3>
&lt;div class="paragraph">
&lt;p>La documentación sobre la programación del kernel es escasa - es una de las pocas áreas donde casi no hay tutoriales amigables, y la frase, &amp;#34;¡usa el código fuente!&amp;#34;, realmente es cierta. Sin embargo, hay algunos trozos (algunos de ellos muy desactualizados) flotando alrededor que deben estudiarse antes de comenzar a programar:&lt;/p>
&lt;/div></description></item></channel></rss>