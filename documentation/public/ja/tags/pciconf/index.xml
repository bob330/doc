<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pciconf on FreeBSD Documentation Portal</title><link>https://docs.freebsd.org/ja/tags/pciconf/</link><description>Recent content in Pciconf on FreeBSD Documentation Portal</description><generator>Hugo</generator><language>ja</language><copyright>BSD 2-clause 'Simplified' License</copyright><atom:link href="https://docs.freebsd.org/ja/tags/pciconf/index.xml" rel="self" type="application/rss+xml"/><item><title>第8章 FreeBSD カーネルのコンフィグレーション</title><link>https://docs.freebsd.org/ja/books/handbook/kernelconfig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.freebsd.org/ja/books/handbook/kernelconfig/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">

&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="kernelconfig-synopsis">8.1. この章では&lt;a class="anchor" href="#kernelconfig-synopsis">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>カーネルは FreeBSD オペレーティングシステムの中核をなすものです。 カーネルは、メモリ管理、セキュリティ制御の強制、ネットワーク、 ディスクアクセスなどを担っています。 FreeBSD の大部分は動的に構成することができるようになっていますが、 まだ、時にはカスタムカーネルを設定してコンパイルする必要があります。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>この章では、以下のことを扱っています。&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>いつカスタムカーネルの構築が必要になるか。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ハードウェア一覧の作成方法。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>カーネルコンフィグレーションファイルのカスタマイズの方法。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>カーネルコンフィグレーションファイルから新しいカーネルを構築する方法。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>新しいカーネルのインストール方法。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>うまく行かないときの問題解決法。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>この章で表示されているすべてのコマンドは、&lt;code>root&lt;/code> 権限で実行する必要があります。&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="kernelconfig-custom-kernel">8.2. なぜカスタムカーネルを作るか?&lt;a class="anchor" href="#kernelconfig-custom-kernel">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>伝統的に、FreeBSD はモノリシック (monolithic) カーネルを使っていました。 このカーネルは、単一の巨大なプログラムで、 扱えるデバイスは固定されていて、 カーネルの振る舞いを変えたければ構築してコンピュータを再起動し、 新しいカーネルを動かさなれければなりませんでした。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>今日では、FreeBSD カーネルのかなりの機能はモジュールに含まれるようになり、 必要に応じて動的にカーネルに組み込んだり外したりできるようになりました。 この移行により、 動作しているカーネルが新しいハードウェアに迅速に対応したり、 カーネルに新たな機能を取り入れられるようになります。 このようなカーネルは、モジュラ (modular) カーネルと呼ばれます。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>しかしながら、 いまだにいくらかは静的にカーネルを構成する必要があります。 機能がカーネルとあまりに密接に結びついているため、 動的に組み込むことができない場合があるためです。 環境によっては、セキュリティの観点から、 カーネルモジュールを読み込んだり外すことができず、 必要となる機能を静的にカーネルにコンパイルしなければならない場合もあります。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>システムに合わせたカーネルを構築することは、多くの場合、 高度な知識を持つ BSD ユーザが避けて通ることのできない通過儀礼です。 この作業は多くの時間を必要としますが、FreeBSD システムに利益をもたらします。 広範囲のハードウェアをサポートしなければならない &lt;span class="filename">GENERIC&lt;/span> カーネルとは異なり、カスタムカーネルは、 使用しているコンピュータのハードウェアのみをサポートするように、 必要のない機能を省くことができます。これは、 次にあげるような利益をもたらします。&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>素早く起動します。 カーネルはシステム上にあるハードウェアしか検出しないので、 システムの起動にかかる時間を短くできます。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>メモリの消費量を減らすことができます。 システムに合わせたカーネルは、 使用しない機能やデバイスドライバを含まないので、 大抵 &lt;span class="filename">GENERIC&lt;/span> カーネルより少ないメモリしか消費しません。 カーネルコードは常に物理メモリ上に存在し、 アプリケーションはその容量分のメモリを使用できないので、 これは重要なことです。 したがって、メモリが少ないシステムでは、 カーネルの再構築は重要です。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>追加のハードウェアをサポートします。 カスタムカーネルは、&lt;span class="filename">GENERIC&lt;/span> カーネルに存在しないデバイスのサポートを追加することができます。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item></channel></rss>