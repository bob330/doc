<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on FreeBSD Documentation Portal</title><link>https://docs.freebsd.org/en/tags/architecture/</link><description>Recent content in Architecture on FreeBSD Documentation Portal</description><generator>Hugo</generator><language>en</language><copyright>BSD 2-clause 'Simplified' License</copyright><atom:link href="https://docs.freebsd.org/en/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Chapter 4. The Jail Subsystem</title><link>https://docs.freebsd.org/en/books/arch-handbook/jail/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.freebsd.org/en/books/arch-handbook/jail/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">

&lt;div class="paragraph">
&lt;p>On most UNIXÂ® systems, &lt;code>root&lt;/code> has omnipotent power. This promotes insecurity. If an attacker gained &lt;code>root&lt;/code> on a system, he would have every function at his fingertips. In FreeBSD there are sysctls which dilute the power of &lt;code>root&lt;/code>, in order to minimize the damage caused by an attacker. Specifically, one of these functions is called &lt;code>secure levels&lt;/code>. Similarly, another function which is present from FreeBSD 4.0 and onward, is a utility called &lt;a href="https://man.freebsd.org/cgi/man.cgi?query=jail&amp;amp;sektion=8&amp;amp;format=html">jail(8)&lt;/a>. Jail chroots an environment and sets certain restrictions on processes which are forked within the jail. For example, a jailed process cannot affect processes outside the jail, utilize certain system calls, or inflict any damage on the host environment.&lt;/p>
&lt;/div></description></item><item><title>Chapter 12. Common Access Method SCSI Controllers</title><link>https://docs.freebsd.org/en/books/arch-handbook/scsi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.freebsd.org/en/books/arch-handbook/scsi/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">

&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="scsi-synopsis">12.1. Synopsis&lt;a class="anchor" href="#scsi-synopsis">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>This document assumes that the reader has a general understanding of device drivers in FreeBSD and of the SCSI protocol.
Much of the information in this document was extracted from the drivers:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>ncr (&lt;span class="filename">/sys/pci/ncr.c&lt;/span>) by Wolfgang Stanglmeier and Stefan Esser&lt;/p>
&lt;/li>
&lt;li>
&lt;p>sym (&lt;span class="filename">/sys/dev/sym/sym_hipd.c&lt;/span>) by Gerard Roudier&lt;/p>
&lt;/li>
&lt;li>
&lt;p>aic7xxx (&lt;span class="filename">/sys/dev/aic7xxx/aic7xxx.c&lt;/span>) by Justin T. Gibbs&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>and from the CAM code itself (by Justin T. Gibbs, see &lt;span class="filename">/sys/cam/*&lt;/span>).
When some solution looked the most logical and was essentially verbatim extracted from the code by Justin T. Gibbs, I marked it as &amp;#34;recommended&amp;#34;.&lt;/p>
&lt;/div></description></item></channel></rss>