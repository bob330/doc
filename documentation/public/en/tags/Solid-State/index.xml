<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Solid State on FreeBSD Documentation Portal</title><link>https://docs.freebsd.org/en/tags/Solid-State/</link><description>Recent content in Solid State on FreeBSD Documentation Portal</description><generator>Hugo</generator><language>en</language><copyright>BSD 2-clause 'Simplified' License</copyright><atom:link href="https://docs.freebsd.org/en/tags/Solid-State/index.xml" rel="self" type="application/rss+xml"/><item><title>FreeBSD and Solid State Devices</title><link>https://docs.freebsd.org/en/articles/solid-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.freebsd.org/en/articles/solid-state/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">
&lt;div class="paragraph abstract-title">
&lt;p>Abstract&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>This article covers the use of solid state disk devices in FreeBSD to create embedded systems.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Embedded systems have the advantage of increased stability due to the lack of integral moving parts (hard drives).
Account must be taken, however, for the generally low disk space available in the system and the durability of the storage medium.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Specific topics to be covered include the types and attributes of solid state media suitable for disk use in FreeBSD, kernel options that are of interest in such an environment, the &lt;span class="filename">rc.initdiskless&lt;/span> mechanisms that automate the initialization of such systems and the need for read-only filesystems, and building filesystems from scratch.
The article will conclude with some general strategies for small and read-only FreeBSD environments.&lt;/p>
&lt;/div></description></item></channel></rss>