<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kobj on FreeBSD Documentation Portal</title><link>http://172.16.201.134:1313/en/tags/kobj/</link><description>Recent content in Kobj on FreeBSD Documentation Portal</description><generator>Hugo</generator><language>en</language><copyright>BSD 2-clause 'Simplified' License</copyright><atom:link href="http://172.16.201.134:1313/en/tags/kobj/index.xml" rel="self" type="application/rss+xml"/><item><title>Chapter 3. Kernel Objects</title><link>http://172.16.201.134:1313/en/books/arch-handbook/kobj/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://172.16.201.134:1313/en/books/arch-handbook/kobj/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">

&lt;div class="paragraph">
&lt;p>Kernel Objects, or &lt;em>Kobj&lt;/em> provides an object-oriented C programming system for the kernel.
As such the data being operated on carries the description of how to operate on it.
This allows operations to be added and removed from an interface at run time and without breaking binary compatibility.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="kernel-objects-term">3.1. Terminology&lt;a class="anchor" href="#kernel-objects-term">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="dlist">
&lt;dl>
&lt;dt class="hdlist1">Object&lt;/dt>
&lt;dd>
&lt;p>A set of data - data structure - data allocation.&lt;/p>
&lt;/dd>
&lt;dt class="hdlist1">Method&lt;/dt>
&lt;dd>
&lt;p>An operation - function.&lt;/p>
&lt;/dd>
&lt;dt class="hdlist1">Class&lt;/dt>
&lt;dd>
&lt;p>One or more methods.&lt;/p>
&lt;/dd>
&lt;dt class="hdlist1">Interface&lt;/dt>
&lt;dd>
&lt;p>A standard set of one or more methods.&lt;/p>
&lt;/dd>
&lt;/dl>
&lt;/div></description></item></channel></rss>