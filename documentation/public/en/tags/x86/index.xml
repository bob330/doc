<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>X86 on FreeBSD Documentation Portal</title><link>http://172.16.201.134:1313/en/tags/x86/</link><description>Recent content in X86 on FreeBSD Documentation Portal</description><generator>Hugo</generator><language>en</language><copyright>BSD 2-clause 'Simplified' License</copyright><atom:link href="http://172.16.201.134:1313/en/tags/x86/index.xml" rel="self" type="application/rss+xml"/><item><title>Chapter 11. x86 Assembly Language Programming</title><link>http://172.16.201.134:1313/en/books/developers-handbook/x86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://172.16.201.134:1313/en/books/developers-handbook/x86/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">

&lt;div class="paragraph">
&lt;p>&lt;em>This chapter was written by G. Adam Stanislav &amp;lt;&lt;a href="mailto:adam@redprince.net">adam@redprince.net&lt;/a>&amp;gt;.&lt;/em>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="x86-intro">A.1. Synopsis&lt;a class="anchor" href="#x86-intro">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Assembly language programming under UNIX® is highly undocumented.
It is generally assumed that no one would ever want to use it because various UNIX® systems run on different microprocessors, so everything should be written in C for portability.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>In reality, C portability is quite a myth.
Even C programs need to be modified when ported from one UNIX® to another, regardless of what processor each runs on.
Typically, such a program is full of conditional statements depending on the system it is compiled for.&lt;/p>
&lt;/div></description></item><item><title>Chapter 15. The FreeBSD Booting Process</title><link>http://172.16.201.134:1313/en/books/handbook/boot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://172.16.201.134:1313/en/books/handbook/boot/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">

&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="boot-synopsis">15.1. Synopsis&lt;a class="anchor" href="#boot-synopsis">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>The process of starting a computer and loading the operating system is referred to as &amp;#34;the bootstrap process&amp;#34;, or &amp;#34;booting&amp;#34;.
FreeBSD’s boot process provides a great deal of flexibility in customizing what happens when the system starts, including the ability to select from different operating systems installed on the same computer, different versions of the same operating system, or a different installed kernel.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>This chapter details the configuration options that can be set.
It demonstrates how to customize the FreeBSD boot process, including everything that happens until the FreeBSD kernel has started, probed for devices, and started &lt;a href="https://man.freebsd.org/cgi/man.cgi?query=init&amp;amp;sektion=8&amp;amp;format=html">init(8)&lt;/a>.
This occurs when the text color of the boot messages changes from bright white to grey.&lt;/p>
&lt;/div></description></item></channel></rss>