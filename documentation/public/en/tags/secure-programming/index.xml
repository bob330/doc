<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Secure Programming on FreeBSD Documentation Portal</title><link>http://172.16.201.134:1313/en/tags/secure-programming/</link><description>Recent content in Secure Programming on FreeBSD Documentation Portal</description><generator>Hugo</generator><language>en</language><copyright>BSD 2-clause 'Simplified' License</copyright><atom:link href="http://172.16.201.134:1313/en/tags/secure-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Chapter 3. Secure Programming</title><link>http://172.16.201.134:1313/en/books/developers-handbook/secure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://172.16.201.134:1313/en/books/developers-handbook/secure/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">

&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="secure-synopsis">3.1. Synopsis&lt;a class="anchor" href="#secure-synopsis">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>This chapter describes some of the security issues that have plagued UNIXÂ® programmers for decades and some of the new tools available to help programmers avoid writing exploitable code.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="secure-philosophy">3.2. Secure Design Methodology&lt;a class="anchor" href="#secure-philosophy">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Writing secure applications takes a very scrutinous and pessimistic outlook on life.
Applications should be run with the principle of &amp;#34;least privilege&amp;#34; so that no process is ever running with more than the bare minimum access that it needs to accomplish its function.
Previously tested code should be reused whenever possible to avoid common mistakes that others may have already fixed.&lt;/p>
&lt;/div></description></item></channel></rss>