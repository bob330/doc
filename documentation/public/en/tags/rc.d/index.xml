<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rc.d on FreeBSD Documentation Portal</title><link>http://172.16.201.134:1313/en/tags/rc.d/</link><description>Recent content in Rc.d on FreeBSD Documentation Portal</description><generator>Hugo</generator><language>en</language><copyright>BSD 2-clause 'Simplified' License</copyright><atom:link href="http://172.16.201.134:1313/en/tags/rc.d/index.xml" rel="self" type="application/rss+xml"/><item><title>Practical rc.d scripting in BSD</title><link>http://172.16.201.134:1313/en/articles/rc-scripting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://172.16.201.134:1313/en/articles/rc-scripting/</guid><description>&lt;div id="preamble">
&lt;div class="sectionbody">
&lt;div class="paragraph abstract-title">
&lt;p>Abstract&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Beginners may find it difficult to relate the facts from the formal documentation on the BSD &lt;span class="filename">rc.d&lt;/span> framework with the practical tasks of &lt;span class="filename">rc.d&lt;/span> scripting.
In this article, we consider a few typical cases of increasing complexity, show &lt;span class="filename">rc.d&lt;/span> features suited for each case, and discuss how they work.
Such an examination should provide reference points for further study of the design and efficient application of &lt;span class="filename">rc.d&lt;/span>.&lt;/p>
&lt;/div>
&lt;hr/>

&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="rcng-intro">1. Introduction&lt;a class="anchor" href="#rcng-intro">&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>The historical BSD had a monolithic startup script, &lt;span class="filename">/etc/rc&lt;/span>.
It was invoked by &lt;a href="https://man.freebsd.org/cgi/man.cgi?query=init&amp;amp;sektion=8&amp;amp;format=html">init(8)&lt;/a> at system boot time and performed all userland tasks required for multi-user operation: checking and mounting file systems, setting up the network, starting daemons, and so on.
The precise list of tasks was not the same in every system; admins needed to customize it.
With few exceptions, &lt;span class="filename">/etc/rc&lt;/span> had to be modified, and true hackers liked it.&lt;/p>
&lt;/div></description></item></channel></rss>